pipeline {
    agent any
    
    tools {
        nodejs 'nodejs-10'
    }

    stages {
        stage('Git checkout') {
            steps {
                git branch: 'main', changelog: false, poll: false, url: 'https://github.com/phaneendraperi/Demo-NodeJs-WebApp-CICD.git'
            }
        }
        
        stage('Install dependencies') {
            steps {
                sh "npm install"
            }
        }
        
        stage('OWASP Dependency check') {
            steps {
                dependencyCheck additionalArguments: '--scan ./', odcInstallation: 'DP'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
        
        stage('Docker image Build and Push') {
            steps {
                   script {
                       withDockerRegistry(credentialsId: 'D' , toolName: 'docker') {
                           sh "docker build -t demonodejs ."
                           sh "docker tag demonodejs phanichennai/nodejs:latest"
                           sh "docker push phanichennai/nodejs:latest"
                           
                       }
                   }
            }
        }
        
        stage('Deploy to the container') {
            steps {
                   script {
                       withDockerRegistry(credentialsId: 'D' , toolName: 'docker') {
                           sh "docker run -d --name NodeJSApp -p 8095:8095 phanichennai/nodejs:latest"
                           
                       }
                   }   
            }
        }    
    }
}
